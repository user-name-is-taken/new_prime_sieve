from linked_dict import *
import math
import time

def sieve_of_Lundquist(p):
    """This code removes all numbers less than p that aren't prime it performs no extra executions.

This would be faster with a better linked_dict._make_d(al) implementation"""
    s=linked_dict(range(2,(p+1))) #this uses a lot of time as of now.
    i=2
    srp=math.sqrt(p)
    while i<=srp:
        g=s.get_next(i) #was g=i
        """
        try:
            while True: #was while g<stop, where stop =p/i; but this is better.
                value=g*i 
                s.remove_by_value(value)
                g=s.get_next(g)

                
        except:
            pass
        i=s.get_next(i)

    #this part deletes p**2n
    k=list()
    sr=2
    sqr=sr**2
    while sqr in s.d:
        k.append(sqr)
        sr=s.get_next(sr)
        sqr=sr**2
    for i in k:
        s.remove_by_value(i)
        
    return s.return_list()
